@mixin progressBar {
  position: relative;
  height: 2.8em;
  box-shadow: 0 3px 9px black;
  border-radius: 1.5em;
  color: white;
  background: #dee2e6;
}
@mixin progressBarBefor {
  display: flex;
  align-items: center;
  position: absolute;

  width: calc(var(--width, 0) * 1%);
  min-width: 1rem;
  background-color: #069;

  width: calc(var(--width, 0) * 1%);
  min-width: 1rem;
  background-color: #069;
  border-radius: 1em 0 0 1em;
  height: 100%;
  padding-inline-start: 0.5rem;
}

.technologie {
  .titre {
    text-align: center;
    font-size: 3rem;
    color: #3b3b3b;
    > span {
      color: red;
      font-size: 3rem;
    }
    @media (max-width: 700px) {
      font-size: calc(var(--font-size700px) * 1.3);
    }
  }
  .container {
    //border: 1px solid red;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 2rem;

    .tech {
      //background-color: #efefef;
      border: 1px solid #e7e7e7;
      height: 136px;
      border-radius: 20px;
      display: flex;
      //gap: 1rem;
      flex-direction: column;
      align-items: center;
      justify-content: center;

      .iconame {
        display: flex;
        justify-content: center;
        width: 100%;
        gap: 2rem;
        max-width: 100%;

        .logo {
          //font-size: 2rem;
          color: blue;
        }
        .name {
          font-size: 2.2rem;
          font-weight: bold;
          @media (max-width: 700px) {
            font-size: calc(var(--font-size700px));
          }
        }
      }

      /********** progressBar for react **********/
      .progressBar {
        width: 50%;
        max-width: 50%;
        @include progressBar;
      }
      .progressBar::before {
        content: attr(data-label);
        max-width: calc(50% - 1em);
        @include progressBarBefor;
      }

      /********** progressBar for Php  **********/
      .progressBarePhp {
        width: 50%;
        max-width: 50%;
        @include progressBar;
      }
      .progressBarePhp::before {
        content: attr(data-label);
        max-width: calc(75% - 1em);
        @include progressBarBefor;
      }
      /********** progressBar for Symfony  **********/
      .progressBareSymfony {
        width: 50%;
        max-width: 50%;
        @include progressBar;
      }
      .progressBareSymfony::before {
        content: attr(data-label);
        max-width: calc(55% - 1em);
        @include progressBarBefor;
      }

      /********** progressBar for Js  **********/
      .progressBarJs {
        width: 50%;
        max-width: 50%;
        @include progressBar;
      }
      .progressBarJs::before {
        content: attr(data-label);
        max-width: calc(55% - 1em);
        @include progressBarBefor;
      }
      /********** progressBar for Css  **********/
      .progressBarCss {
        width: 50%;
        max-width: 50%;
        @include progressBar;
      }
      .progressBarCss::before {
        content: attr(data-label);
        max-width: calc(75% - 1em);
        @include progressBarBefor;
      }
      /********** progressBar for Css  **********/
      .progressBarHtml {
        width: 50%;
        max-width: 50%;
        @include progressBar;
      }
      .progressBarHtml::before {
        content: attr(data-label);
        max-width: calc(75% - 1em);
        @include progressBarBefor;
      }
    }
  }
}

@media (max-width: 900px) {
  .technologie {
    .container {
      grid-template-columns: repeat(2, 1fr);
    }
  }
}
@media (max-width: 600px) {
  .technologie {
    .container {
      grid-template-columns: 1fr;
    }
  }
}
